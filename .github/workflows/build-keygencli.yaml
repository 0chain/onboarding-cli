name: build-keygencli
on:
  push:
    branches:
      - main
      - staging
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-linux:
    name: Build-linux
    runs-on: [self-hosted, arc-runner]
    steps:
      - name: Setup go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: '1.18' # The Go version to download (if necessary) and use.

      - name: Install deps
        run: |
          sudo apt update
          sudo apt -y install build-essential nghttp2 libnghttp2-dev libssl-dev make

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set GITHUB_ENV
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

          if [[ "${{github.base_ref}}" == "master" || "${{github.ref}}" == "refs/heads/master" ]]; then
            echo "TAG=v0.0.0-master" >> $GITHUB_ENV
          elif  [[ "${{github.base_ref}}" == "dev" || "${{github.ref}}" == "refs/heads/dev" ]]; then
            echo "TAG=v0.0.0-dev" >> $GITHUB_ENV
          elif  [[ "${{github.base_ref}}" == "staging" || "${{github.ref}}" == "refs/heads/staging" ]]; then
            echo "TAG=v0.0.0-staging" >> $GITHUB_ENV
          else
            echo "TAG=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
          fi

      - name: Install
        run: make build

      - name: Zip release
        run: tar -czvf keygen-linux.tar.gz ./bin/keygen

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: keygen-linux.tar.gz
          tag: ${{ env.TAG }}
          overwrite: true
          file_glob: true

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: keygen-linux
          path: keygen
          retention-days: 5
